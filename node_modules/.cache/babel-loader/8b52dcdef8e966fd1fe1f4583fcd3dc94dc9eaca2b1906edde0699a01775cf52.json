{"ast":null,"code":"var _jsxFileName = \"/home/shawn/code/SASutherland/react-gif-search/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport SearchForm from \"./Components/SearchForm\";\nimport GifList from \"./Components/GifList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gifs, setGifs] = useState([]);\n  const [query, setQuery] = useState(\"panda\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // activeFetch ensures the latest query is fetched. It is set to false after each query.\n\n    let activeFetch = true;\n    axios.get(`https://api.giphy.com/v1/gifs/search?api_key=gm1dfkC7reinIgvyjRaxYMLm2IwjvFjw&q=${query}&limit=24&rating=g`).then(response => {\n      if (activeFetch) {\n        setGifs(response.data.data);\n        set;\n      }\n    }).catch(error => {\n      console.log(\"Error fetching and parsing data\", error);\n    });\n\n    // FETCHING WITHOUT AXIOS:\n\n    // fetch(\"https://api.giphy.com/v1/gifs/trending?api_key=gm1dfkC7reinIgvyjRaxYMLm2IwjvFjw&limit=24&rating=g\")\n    //   .then(response => response.json())\n    //   .then(responseData => setGifs(responseData.data))\n    //   .catch(error => console.log(\"Error fetching and parsing data\", error));\n\n    return () => {\n      activeFetch = false;\n    };\n  }, [query]);\n  const handleQueryChange = searchText => {\n    setQuery(searchText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"main-title\",\n          children: \"Shawn - GifSearch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchForm, {\n          changeQuery: handleQueryChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(GifList, {\n        data: gifs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A2mUFCSP6UoUCnVnRNccNQeg68E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","SearchForm","GifList","jsxDEV","_jsxDEV","App","_s","gifs","setGifs","query","setQuery","loading","setLoading","activeFetch","get","then","response","data","set","catch","error","console","log","handleQueryChange","searchText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","changeQuery","_c","$RefreshReg$"],"sources":["/home/shawn/code/SASutherland/react-gif-search/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport SearchForm from \"./Components/SearchForm\";\nimport GifList from \"./Components/GifList\";\n\nfunction App() {\n  const [gifs, setGifs] = useState([]);\n  const [query, setQuery] = useState(\"panda\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // activeFetch ensures the latest query is fetched. It is set to false after each query.\n\n    let activeFetch = true;\n\n    axios.get(`https://api.giphy.com/v1/gifs/search?api_key=gm1dfkC7reinIgvyjRaxYMLm2IwjvFjw&q=${query}&limit=24&rating=g`)\n      .then(response => {\n        if (activeFetch) {\n          setGifs(response.data.data);\n          set\n        }\n      })\n      .catch(error => {console.log(\"Error fetching and parsing data\", error)})\n\n    // FETCHING WITHOUT AXIOS:\n\n    // fetch(\"https://api.giphy.com/v1/gifs/trending?api_key=gm1dfkC7reinIgvyjRaxYMLm2IwjvFjw&limit=24&rating=g\")\n    //   .then(response => response.json())\n    //   .then(responseData => setGifs(responseData.data))\n    //   .catch(error => console.log(\"Error fetching and parsing data\", error));\n\n    return () => {activeFetch = false}\n  }, [query]);\n\n  const handleQueryChange = searchText => {\n    setQuery(searchText);\n  };\n\n  return (\n    <div>\n      <div className=\"main-header\">\n        <div className=\"inner\">\n          <h1 className=\"main-title\">Shawn - GifSearch</h1>\n          <SearchForm changeQuery={handleQueryChange} />\n        </div>\n      </div>\n      <div className=\"main-content\">\n        <GifList data={gifs} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,OAAO,CAAC;EAC3C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;;IAEA,IAAIe,WAAW,GAAG,IAAI;IAEtBb,KAAK,CAACc,GAAG,CAAE,mFAAkFL,KAAM,oBAAmB,CAAC,CACpHM,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAIH,WAAW,EAAE;QACfL,OAAO,CAACQ,QAAQ,CAACC,IAAI,CAACA,IAAI,CAAC;QAC3BC,GAAG;MACL;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MAACC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,KAAK,CAAC;IAAA,CAAC,CAAC;;IAE1E;;IAEA;IACA;IACA;IACA;;IAEA,OAAO,MAAM;MAACP,WAAW,GAAG,KAAK;IAAA,CAAC;EACpC,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,MAAMc,iBAAiB,GAAGC,UAAU,IAAI;IACtCd,QAAQ,CAACc,UAAU,CAAC;EACtB,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAD,QAAA,eAC1BrB,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAD,QAAA,gBACpBrB,OAAA;UAAIsB,SAAS,EAAC,YAAY;UAAAD,QAAA,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjD1B,OAAA,CAACH,UAAU;UAAC8B,WAAW,EAAER;QAAkB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACN1B,OAAA;MAAKsB,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BrB,OAAA,CAACF,OAAO;QAACe,IAAI,EAAEV;MAAK;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CA9CQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}